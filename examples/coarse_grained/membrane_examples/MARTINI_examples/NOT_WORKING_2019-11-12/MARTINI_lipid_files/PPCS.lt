import "martini.lt"

PPCS inherits MARTINI {

  # atomID   molID  atomTyle  charge     X        Y          Z
  write('Data Atoms') {
    $atom:NC3 $mol:. @atom:Q0   0.2236068   0.000000   0.000000   6.000000
    $atom:PO4 $mol:. @atom:Qa  -0.2236068   0.000000   0.000000   5.000000
    $atom:CNO $mol:. @atom:P5   0.0         0.000000   0.000000   4.000000
    $atom:CN1 $mol:. @atom:P1   0.0         0.000000   1.000000   4.000000
    $atom:C1A $mol:. @atom:C1   0.0         0.000000  -1.000000   4.000000
    $atom:C2A $mol:. @atom:C1   0.0         0.000000  -1.000000   3.000000
    $atom:C3A $mol:. @atom:C1   0.0         0.000000  -1.000000   2.000000
    $atom:C4A $mol:. @atom:C1   0.0         0.000000  -1.000000   1.000000
    $atom:D1B $mol:. @atom:C3   0.0         0.000000   1.000000   3.000000
    $atom:C2B $mol:. @atom:C1   0.0         0.000000   1.000000   2.000000
    $atom:C3B $mol:. @atom:C1   0.0         0.000000   1.000000   1.000000
    $atom:C4B $mol:. @atom:C1   0.0         0.000000   1.000000   0.000000
  }
  # Note: The coordinates here are integers because we were using a text editor
  #       and we just wanted an easy way to create non-overlapping coordinates
  #       for the particles in these molecules.  Later we will use the
  #       .scale(4.7) command to convert these coordinates into Angstroms.
  #       (The shape of the molecule will be unrealistic, but we can fix
  #        that later during minimization.)
  # Note: The charge of the Q0 and Qa is 1/sqrt(20) to compensate for the fact
  #       that the MARTINI force field uses electrostatic interactions which
  #       in SI units is    q1*q2 / 4π ε0 ε
  #       ...where "ε0" is the vacuum permitivity, and "ε" is the
  #       relative permitivity of water used in the MARTINI model,
  #       WHICH THEY CHOSE TO BE 20.0
  #       (This is an odd choice.  In real water, at large distances ε≈80.)
  #       However the electrostatic interactions in most LAMMPS pair styles
  #       assume that ε=1.  To compensate for this, we divide charges by sqrt(ε)

  write('Data Bond List') {
    $bond:b1 $atom:NC3 $atom:PO4
    $bond:b2 $atom:PO4 $atom:CNO
    $bond:b3 $atom:CNO $atom:CN1
    $bond:b4 $atom:CNO $atom:C1A
    $bond:b5 $atom:C1A $atom:C2A
    $bond:b6 $atom:C2A $atom:C3A
    $bond:b7 $atom:C3A $atom:C4A
    $bond:b8 $atom:CN1 $atom:D1B
    $bond:b9 $atom:D1B $atom:C2B
    $bond:b10 $atom:C2B $atom:C3B
    $bond:b11 $atom:C3B $atom:C4B
  }
}


PPCS.scale(4.7)    # Convert integer coordinates to Angstroms

# Optional: Move the molecule to a convenient location for buildling a bilayer:
#           Center the molecule in the X,Y directions and set the min Z value.

PPCS.move(0,-0.833333,2.35).rot(-30.0,0,0,1)
